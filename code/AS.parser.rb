#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.4
# from racc grammer file "AS.y".
#

require 'racc/parser'


require 'AS.dat'
include DS

=begin rdoc
Parser for a Prolog-like language for argumentation.

To put a simple KnowledgeBase into variable _rb_ do

   require 'AS.parser' # this file contains the parser tables
   require <additional AS stuff>

   sample_input = <<EOF
      a(X) 0.5- b(X).
      b(Y) 0.5- c(Y).
      c(aap) 0.8.
      c(noot) 0.6.
   EOF

   ap = ArgumentParser.new
   rb = ap.parse(sample_input)

See further the documentation for KnowledgeBase for what to do with _rb_.
=end

class ArgumentParser < Racc::Parser

module_eval <<'..end AS.y modeval..ide687043cd1', 'AS.y', 170
# Inner stuff

   def parse( str )
      @q = []
      @lineno = 1
      # FIXME: betere lexer maken die regelnummers onthoud
      while str.size > 0 do
         case str
            when /\A[\#\%].*/o
            when /\A[\n\r]+/o
               @lineno += 1
            when /\A[\s]+/o
            when /\A[<:]\-/o
               @q.push [:ABW, $&]
            when /\A\?\-/o
               @q.push [:QRY, $&]
            when /\A=?<|>=?|=/o
               @q.push [:CMP, $&]
            when /\A[~\-]/o
               @q.push [:NEG, $&]
            when /\A[A-Z]\w*/o
               @q.push [:VAR, $&]
            when /\A\d+\.\d+/o
               @q.push [:NUM, $&]
            when /\A\w+/o
               @q.push [:IDN, $&]
            when /\A./o # catchall
               s = $&
               @q.push [s, s]
         end
         str = $'
      end
      @q.push [false, '$end']

#       -- Debug -------------------------------------
#       @q.each {  |x|
#          printf "%10s %s\n", x[0], x[1]
#       }
#       -- Debug -------------------------------------

      do_parse
   end

   def next_token
      @q.shift
   end

   def on_error( t, val, vstack )

      raise ParseError,
         "line #{@lineno}: unexpected symbol, on token #{token_to_str(t)}=#{val.inspect}.\nExecution aborted due to compilation errors"

   end


# End of inner stuff
..end AS.y modeval..ide687043cd1

##### racc 1.4.4 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 0, 16, :_reduce_1,
 3, 16, :_reduce_2,
 2, 16, :_reduce_3,
 2, 17, :_reduce_4,
 2, 17, :_reduce_5,
 5, 17, :_reduce_6,
 7, 17, :_reduce_7,
 2, 18, :_reduce_8,
 3, 18, :_reduce_9,
 4, 18, :_reduce_10,
 1, 18, :_reduce_11,
 1, 18, :_reduce_12,
 1, 18, :_reduce_13,
 1, 20, :_reduce_14,
 3, 20, :_reduce_15,
 0, 19, :_reduce_16,
 1, 19, :_reduce_17,
 1, 19, :_reduce_18,
 0, 21, :_reduce_19,
 1, 21, :_reduce_20,
 1, 21, :_reduce_21,
 1, 22, :_reduce_22 ]

racc_reduce_n = 23

racc_shift_n = 39

racc_action_table = [
    19,     7,    27,    20,    20,    37,     7,    19,     7,    28,
    18,    20,     5,    28,     6,     7,     8,     9,    19,     7,
    12,    28,    16,    14,    33,    29,    28,     6,     7,     8,
     9,     6,     7,     8,     9,     6,     7,     8,     9,     6,
     7,     8,     9,     6,     7,     8,     9,     6,     7,     8,
     9,     6,     7,     8,     9,     6,     7,     8,     9,    13,
    20,     3,     1 ]

racc_action_check = [
    11,    11,    21,    22,    11,    35,    35,    25,    25,    23,
    11,    25,     2,    35,     2,     2,     2,     2,    31,    31,
     2,    24,    10,     5,    30,    24,    31,    27,    27,    27,
    27,    33,    33,    33,    33,     9,     9,     9,     9,    13,
    13,    13,    13,    18,    18,    18,    18,    20,    20,    20,
    20,    28,    28,    28,    28,    12,    12,    12,    12,     4,
    32,     1,     0 ]

racc_action_pointer = [
    61,    50,    12,   nil,    46,    23,   nil,   nil,   nil,    33,
    11,    -2,    53,    37,   nil,   nil,   nil,   nil,    41,   nil,
    45,    -5,    -3,    -1,    11,     5,   nil,    25,    49,   nil,
    17,    16,    54,    29,   nil,     3,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -23,   -23,    -3,   -11,   -23,   -12,   -22,   -13,   -23,
   -23,   -16,   -23,   -23,    39,    -8,    -2,   -17,   -23,   -18,
   -23,    -4,   -14,    -5,   -23,   -16,    -9,   -23,   -23,   -10,
   -23,   -16,   -15,   -23,    -6,   -19,   -20,   -21,    -7 ]

racc_goto_table = [
    11,    17,    23,    24,    10,    38,     2,    15,    21,   nil,
   nil,   nil,   nil,   nil,   nil,    17,    25,    31,    26,   nil,
   nil,    17,    30,    35,   nil,    36,    32,   nil,    34 ]

racc_goto_check = [
     3,     7,     5,     5,     2,     6,     1,     3,     4,   nil,
   nil,   nil,   nil,   nil,   nil,     7,     3,     5,     3,   nil,
   nil,     7,     4,     5,   nil,     7,     3,   nil,     4 ]

racc_goto_pointer = [
   nil,     6,     2,    -2,    -3,   -10,   -30,   -10 ]

racc_goto_default = [
   nil,   nil,   nil,    22,   nil,   nil,   nil,     4 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :NUM => 2,
 :IDN => 3,
 :VAR => 4,
 :NEG => 5,
 :CMP => 6,
 :ABW => 7,
 :QRY => 8,
 :STR => 9,
 "," => 10,
 "." => 11,
 ":" => 12,
 "(" => 13,
 ")" => 14 }

racc_use_result_var = true

racc_nt_base = 15

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'NUM',
'IDN',
'VAR',
'NEG',
'CMP',
'ABW',
'QRY',
'STR',
'","',
'"."',
'":"',
'"("',
'")"',
'$start',
'rules',
'rule',
'term',
'strength',
'terms',
'degree_of_belief',
'constant']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'AS.y', 32
  def _reduce_1( val, _values, result )
 result = KnowledgeBase.new
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 35
  def _reduce_2( val, _values, result )
 val[0] << val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 38
  def _reduce_3( val, _values, result )
 yyerrok;
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 45
  def _reduce_4( val, _values, result )
 result = Rule.new( val[0], val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 48
  def _reduce_5( val, _values, result )
 result = Rule.new( Constant.new('query'), 1.0, val[1], 1.0, Constant.new('qry') )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 51
  def _reduce_6( val, _values, result )
 result = Rule.new( val[0], val[1], val[3], val[4], Rule.generate_name )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 54
  def _reduce_7( val, _values, result )
 result = Rule.new( val[2], val[3], val[5], val[6], val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 59
  def _reduce_8( val, _values, result )
 result = Term.new( '~', val[1] )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 62
  def _reduce_9( val, _values, result )
 result = Term.new( val[1], val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 65
  def _reduce_10( val, _values, result )
 result = Term.new( val[0], val[2] )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 68
  def _reduce_11( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 71
  def _reduce_12( val, _values, result )
 result = val[0].to_f
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 74
  def _reduce_13( val, _values, result )
 result = Variable.new( val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 79
  def _reduce_14( val, _values, result )
 result = TermList.new( 1, val[0] )
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 82
  def _reduce_15( val, _values, result )
 result = val[0] << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 102
  def _reduce_16( val, _values, result )
 result = 1.0
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 105
  def _reduce_17( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 116
  def _reduce_18( val, _values, result )
  result = val[0].to_f
            if result < 0.0
               raise ParseError, "strength #{result} is smaller than 0.0 which is not allowed"
            elsif result > 1.0
               raise ParseError, "strength #{result} is greater than 1.0 which is not allowed"
            elsif result.zero?
               raise ParseError, "zero strengh not allowed"
            end
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 121
  def _reduce_19( val, _values, result )
 result = 0.0
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 124
  def _reduce_20( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 133
  def _reduce_21( val, _values, result )
  result = val[0].to_f
            if result < 0.0
               raise ParseError, "dob #{result} is smaller than 0.0 which is not allowed"
            elsif result > 1.0
               raise ParseError, "dob #{result} is greater than 1.0 which is not allowed"
            end
   result
  end
.,.,

module_eval <<'.,.,', 'AS.y', 138
  def _reduce_22( val, _values, result )
 result = Constant.new( val[0] )
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class ArgumentParser

# Footer stuff
