<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="ja-JP">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=EUC-JP">
	<meta name="generator" content="tDiary 2.2.0">
	<meta http-equiv="Last-Modified" content="Fri, 18 Jan 2013 01:19:22 GMT">
	<meta http-equiv="Content-Script-Type" content="text/javascript; charset=EUC-JP">
	<meta name="author" content="jijixi">
	<link rev="made" href="mailto:jijixi@azito.com">
	<link rel="index" title="トップ" href="http://jijixi.azito.com/jijixi/">
	<link rel="start" title="最新" href="./index.rb">
	<link rel="alternate" media="handheld" type="text/html" href="http://jijixi.azito.com/cgi-bin/diary/index.rb">
	
	
	<meta http-equiv="content-style-type" content="text/css">
	<link rel="stylesheet" href="../../css/base.css" type="text/css" media="all">
	<link rel="stylesheet" href="../../css/autumn.css" title="autumn" type="text/css" media="all">
	<title>jijixi's diary</title>
	
  <script type="text/javascript">
  <!--
  // http://www.din.or.jp/~hagi3/JavaScript/JSTips/Mozilla/
  // _dom : kind of DOM.
  //        IE4 = 1, IE5+ = 2, NN4 = 3, NN6+ = 4, others = 0
  _dom = document.all?(document.getElementById?2:1)
                     :(document.getElementById?4
                     :(document.layers?3:0));
  var _calendar3_popElement = null;
  var _calendar3_popCount = 0;

  if (document.compatMode){
    if (_dom==2 && document.compatMode=="CSS1Compat") _dom = 2.5;
  } // Win IE6

  function getLeft(div){
    result = 0;
    while (1){
      div = div.offsetParent;
      result += div.offsetLeft;
      if (div.tagName=="BODY") return result;
    }
  }

  function getTop(div){
    result = 0;
    while (1){
      div = div.offsetParent;
      result += div.offsetTop;
      if (div.tagName=="BODY") return result;
    }
  }

  function moveDivTo(div,left,top){
    if(_dom==4){
      div.style.left=left+'px';
      div.style.top =top +'px';
      return;
    }
    if(_dom==2.5 || _dom==2 || _dom==1){
      div.style.pixelLeft=left;
      div.style.pixelTop =top;
      return;
    }
    if(_dom==3){
      div.moveTo(left,top);
      return;
    }
  }

  function moveDivBy(div,left,top){
    if(_dom==4){
      div.style.left=div.offsetLeft+left;
      div.style.top =div.offsetTop +top;
      return;
    }
    if(_dom==2.5 || _dom==2){
      div.style.pixelLeft=div.offsetLeft+left;
      div.style.pixelTop =div.offsetTop +top;
      return;
    }
    if(_dom==1){
      div.style.pixelLeft+=left;
      div.style.pixelTop +=top;
      return;
    }
    if(_dom==3){
      div.moveBy(left,top);
      return;
    }
  }

  function getDivLeft(div){
    if(_dom==2.5) return div.offsetLeft+getLeft(div);
    if(_dom==4 || _dom==2) return div.offsetLeft;
    if(_dom==1)            return div.style.pixelLeft;
    if(_dom==3)            return div.left;
    return 0;
  }

  function getDivTop(div){
    if(_dom==2.5) return div.offsetTop+getTop(div);
    if(_dom==4 || _dom==2) return div.offsetTop;
    if(_dom==1)            return div.style.pixelTop;
    if(_dom==3)            return div.top;
    return 0;
  }

  function getDivWidth (div){
    if(_dom==4 || _dom==2.5 || _dom==2) return div.offsetWidth;
    if(_dom==1)            return div.style.pixelWidth;
    if(_dom==3)            return div.clip.width;
    return 0;
  }

  function getDivHeight(div){
    if(_dom==4 || _dom==2.5 || _dom==2) return div.offsetHeight;
    if(_dom==1)            return div.style.pixelHeight;
    if(_dom==3)            return div.clip.height;
    return 0;
  }

  function popup(target,element,notitle) {
    _calendar3_popCount++;
    popdownNow();
    if (navigator.appName=='Microsoft Internet Explorer') {
      moveDivTo(element,getDivLeft(target)+getDivWidth(target),getDivTop(target)+getDivHeight(target)*13/8);
    } else {
      moveDivTo(element,getDivLeft(target)+getDivWidth(target)/2,getDivTop(target)+(getDivHeight(target)*2)/3);
    }
    element.style.display="block";
    notitle.title="";
  }

  function popdown(element) {
    _calendar3_popElement=element;
    setTimeout('popdownDelay()', 2000);
  }

  function popdownDelay() {
    _calendar3_popCount--;
    if (_calendar3_popCount==0) {
      popdownNow();
    }
  }

  function popdownNow() {
    if (_calendar3_popElement!=null) {
      _calendar3_popElement.style.display="none";
      _calendar3_popElement=null;
    }
  }
  // -->
</script>
	<link rel="alternate" type="application/rss+xml" title="RSS" href="http://jijixi.azito.com/diary/index.rdf">
	<meta name="robots" content="noindex,follow">
</head>
<body>


<div class="adminmenu">
<span class="adminmenu"><a href="http://jijixi.azito.com/jijixi/">トップ</a></span>
<span class="adminmenu"><a href="./index.rb?date=20101115-3">&laquo;前3日分</a></span>
<span class="adminmenu"><a href="update.rb" rel="nofollow">追記</a></span>
</div>
<h1>じじぃの日記、ツッコミ可</h1>
<p>
Twitter: @jijixi_org<br />
Xbox Live: jijixi
</p>
<div style="text-align: right;">
<a href="http://jijixi.azito.com/cgi-bin/diary/index.rb?date=19700102">初心者が書いた OCaml 入門</a><br>
<a href="http://jijixi.azito.com/cgi-bin/diary/index.rb?date=19700201">Spotlight tips サイト内リンク集</a>
</div>
<div class="calendar">
<div class="year">1970|<a href="./index.rb?date=197001">01</a>|<a href="./index.rb?date=197002">02</a>|</div>
<div class="year">2003|<a href="./index.rb?date=200310">10</a>|<a href="./index.rb?date=200311">11</a>|<a href="./index.rb?date=200312">12</a>|</div>
<div class="year">2004|<a href="./index.rb?date=200401">01</a>|<a href="./index.rb?date=200402">02</a>|<a href="./index.rb?date=200403">03</a>|<a href="./index.rb?date=200404">04</a>|<a href="./index.rb?date=200405">05</a>|<a href="./index.rb?date=200406">06</a>|<a href="./index.rb?date=200407">07</a>|<a href="./index.rb?date=200408">08</a>|<a href="./index.rb?date=200409">09</a>|<a href="./index.rb?date=200410">10</a>|<a href="./index.rb?date=200411">11</a>|<a href="./index.rb?date=200412">12</a>|</div>
<div class="year">2005|<a href="./index.rb?date=200501">01</a>|<a href="./index.rb?date=200502">02</a>|<a href="./index.rb?date=200503">03</a>|<a href="./index.rb?date=200504">04</a>|<a href="./index.rb?date=200505">05</a>|<a href="./index.rb?date=200506">06</a>|<a href="./index.rb?date=200507">07</a>|<a href="./index.rb?date=200508">08</a>|<a href="./index.rb?date=200509">09</a>|<a href="./index.rb?date=200510">10</a>|<a href="./index.rb?date=200511">11</a>|<a href="./index.rb?date=200512">12</a>|</div>
<div class="year">2006|<a href="./index.rb?date=200601">01</a>|<a href="./index.rb?date=200602">02</a>|<a href="./index.rb?date=200603">03</a>|<a href="./index.rb?date=200604">04</a>|<a href="./index.rb?date=200605">05</a>|<a href="./index.rb?date=200606">06</a>|<a href="./index.rb?date=200607">07</a>|<a href="./index.rb?date=200608">08</a>|<a href="./index.rb?date=200609">09</a>|<a href="./index.rb?date=200610">10</a>|<a href="./index.rb?date=200611">11</a>|<a href="./index.rb?date=200612">12</a>|</div>
<div class="year">2007|<a href="./index.rb?date=200701">01</a>|<a href="./index.rb?date=200702">02</a>|<a href="./index.rb?date=200703">03</a>|<a href="./index.rb?date=200704">04</a>|<a href="./index.rb?date=200705">05</a>|<a href="./index.rb?date=200706">06</a>|<a href="./index.rb?date=200707">07</a>|<a href="./index.rb?date=200708">08</a>|<a href="./index.rb?date=200709">09</a>|<a href="./index.rb?date=200710">10</a>|<a href="./index.rb?date=200711">11</a>|<a href="./index.rb?date=200712">12</a>|</div>
<div class="year">2008|<a href="./index.rb?date=200801">01</a>|<a href="./index.rb?date=200802">02</a>|<a href="./index.rb?date=200803">03</a>|<a href="./index.rb?date=200804">04</a>|<a href="./index.rb?date=200805">05</a>|<a href="./index.rb?date=200806">06</a>|<a href="./index.rb?date=200807">07</a>|<a href="./index.rb?date=200808">08</a>|<a href="./index.rb?date=200809">09</a>|<a href="./index.rb?date=200810">10</a>|<a href="./index.rb?date=200811">11</a>|<a href="./index.rb?date=200812">12</a>|</div>
<div class="year">2009|<a href="./index.rb?date=200901">01</a>|<a href="./index.rb?date=200902">02</a>|<a href="./index.rb?date=200903">03</a>|<a href="./index.rb?date=200904">04</a>|<a href="./index.rb?date=200905">05</a>|<a href="./index.rb?date=200906">06</a>|<a href="./index.rb?date=200907">07</a>|<a href="./index.rb?date=200908">08</a>|<a href="./index.rb?date=200909">09</a>|<a href="./index.rb?date=200910">10</a>|<a href="./index.rb?date=200911">11</a>|<a href="./index.rb?date=200912">12</a>|</div>
<div class="year">2010|<a href="./index.rb?date=201001">01</a>|<a href="./index.rb?date=201002">02</a>|<a href="./index.rb?date=201003">03</a>|<a href="./index.rb?date=201004">04</a>|<a href="./index.rb?date=201005">05</a>|<a href="./index.rb?date=201006">06</a>|<a href="./index.rb?date=201007">07</a>|<a href="./index.rb?date=201008">08</a>|<a href="./index.rb?date=201011">11</a>|</div>
<div class="year">2011|<a href="./index.rb?date=201105">05</a>|</div>
<div class="year">2012|<a href="./index.rb?date=201201">01</a>|</div>
</div>

<hr class="sep">


	
<div class="day">
<h2><span class="date">
<a href="./index.rb?date=20120125">2012-01-25</a>
</span> 
<span class="title"></span> <span class="nyear">[<a href="./index.rb?date=0125" title="長年日記">長年日記</a>]</span></h2>

<div class="body">

<div class="section">

<h3><a href="./index.rb?date=20120125#p01"><span class="sanchor">%</span></a> [<a href="./index.rb?year=2012;category=objc">objc</a>] ARC の最適化バグらしきものを踏んだ件</h3>
<p>
-O0だと問題無いのに最適化がオンだと参照カウントがおかしくなるケースがあるようだ。
iOSシミュレータでも実機でも同じように落ちる。Mac OS X だとどうなるかは未確認。
調べるのめんどくさいから既知の問題なのかは知らない。
その辺詳しい人で、もし未知のバグだよってことなら報告しておいてくれると嬉しいかも。
どこに報告すりゃいいのかわからんし。</p>
<p>環境はXcode 4.2.1 + iOS SDK 5で、再現コードは以下のような感じ。</p>
<pre>
+ (NSArray *)arrayForTestWithObject:(id)element {
    NSArray *aResult = nil;
    @autoreleasepool {
        NSArray *a = [NSArray arrayWithObjects:element, nil];
        if (rand() &gt; 0) { // (1)
            aResult = [a mutableCopy];
        }
    }
    return aResult;
}

- (NSArray *)arrayForTest {
    return [[self class] arrayForTestWithObject:@"hoge"]; // (2)
}

- (void)testARC {
    NSArray *a = [self arrayForTest];
    NSLog(@"%@", a);
}
</pre>
<p>適当なところにこれをコピペして最適化オンの状態で (Releaseビルドにすると手っ取り早い) testARC メソッドを呼ぶと (2) のところで落ちる。
シミュレータで Enable Zombie Objects を ON にしていれば、</p>
<pre>
*** -[__NSArrayM retain]: message sent to deallocated instance 0x6b2c060
</pre>
<p>ログにこんなのが出力されるはず。</p>
<p>arrayForTestWithObject: 内で aResult の参照数の調整がおかしなことになっている模様。
(1)のところが肝らしく、例えばここの条件を YES (常に真) にしたりすると落ちなくなる。
if を取っ払っても同じように落ちない。
さらに、@autoreleasepool ブロックを取っ払えば問題は起きないので、@autoreleasepool の中で条件によって変数にアサインしたりしなかったりってことがあると危険ぽい。</p>
<p>そんなこんなで半日潰れた今日であった。</p>
<p>ちなみに、上記の例で言うと変数用意しておいてどうのなんてことはせずに、いきなりreturnしてしまえば問題なかったりする。</p>
<pre>
+ (NSArray *)arrayForTestWithObject:(id)element {
    @autoreleasepool {
        NSArray *a = [NSArray arrayWithObjects:element, nil];
        if (rand() &gt; 0) {
            return [a mutableCopy]; // (3)
        }
    }
    return nil;
}
</pre>
<p>(3)の部分、@autoreleasepool だとこう書けるので楽だし、上記の問題のことを考えればむしろこう書いた方がいいんだろうね。
まあ、今回は元々自分でNSAutoreleasePoolを使ってたコードをコンバートしたものだったから、こういう事態になったんだけど。</p>
<p>(追記 2012/3/30)</p>
<p>Xcode 4.3.2 で追試したところ上記 (3) の例でもダメなのを確認。
当時勘違いしていたのか、その後状況が変わったのかは不明だが、現状では条件によってnilになり得る値を返したい時は @autoreleasepool ブロックを避けた方が良さそう。
ほんとにどうしても @autoreleasepool が使えないと困るって場合には以下のようなことをすれば一応回避できるっぽい。
いかにも冗長でしかもアホっぽいけど。</p>
<pre>
+ (NSArray *)arrayForTestWithObject:(id)element { // (4)
    NSArray *aResult = nil;
    @autoreleasepool {
        NSArray *a = [NSArray arrayWithObjects:element, nil];
        if (rand() &gt; 0) {
            aResult = [a mutableCopy];
        }
    }
    return ([aResult isKindOfClass:[NSArray class]] ? aResult : nil); // (5)
}
</pre>
<p>不思議なことに、(5) の条件をただの nil チェックだけにするとダメ。とにかく何かメソッド呼んでればかまわないのかもしれないので、もう少しアホっぽく見えないダミー記述を考えた方がいいかもしれない。</p>
<pre>
NSLog(@"%@", aResult);
return aResult;
</pre>
<p>なんてのでも良かった。ひどいなｗ</p>
<p>(/追記)</p>
<p>(追記 2013/1/18)</p>
<p>Xcode 4.5.2 + iOS SDK 6.0 では直ってる模様。</p>
<p>(/追記)</p>

</div>


</div>

<div class="comment">

	<div class="caption">[<a href="./index.rb?date=20120125#c">ツッコミを入れる</a>]</div>
</div>








</div>


	<hr class="sep">
	
<div class="day">
<h2><span class="date">
<a href="./index.rb?date=20110526">2011-05-26</a>
</span> 
<span class="title"></span> <span class="nyear">[<a href="./index.rb?date=0526" title="長年日記">長年日記</a>]</span></h2>

<div class="body">

<div class="section">

<h3><a href="./index.rb?date=20110526#p01"><span class="sanchor">%</span></a> [<a href="./index.rb?year=2012;category=objc">objc</a>] こっそり忍び寄る未初期化変数の罠</h3>
<p>以前 iOS アプリの開発でこんなことを書いてハマったことがある。</p>
<pre>
return self.someView.frame.size.height;
</pre>
<p>someView プロパティ (UIView のサブクラスの何か) には何も入っていない場合があるんだが、その場合、最初は 0 を返すもののしばらくすると変な値を返し始める。
デバッグ環境だとなかなかその現象が出ないので原因の特定に難儀したんだが、わかってしまえば「ああそうか、なんで気づかなかったんだ」という話。</p>
<p>Objective-C では nil に対するメッセージ (メソッド呼び出し) は何も起こらず nil が返ることになっているので、特にエラーを出す必要が無い場合にはつい nil かどうかのチェックを省略してしまうんだが、上記のような場合にはそれが仇になる。</p>
<p>UIView の frame プロパティの型は CGRect で、これはオブジェクトではなく構造体である。
構造体に関しては C そのものと考えていい。
つまり上記のようなコードは実際には以下のような処理の流れになっている (と思われる)。</p>
<pre>
UIView *aView = [self someView];
CGRect frame = [aView frame];
return frame.size.height;
</pre>
<p>aView が nil の場合、frame には nil が代入されるのだろう。
そうだとすれば当然それは CGRect の初期化としては不十分で、その結果、ある程度メモリ領域が汚れてくるとゴミ値が入ってくるので return される値がおかしくなる。
C の経験がある程度あれば当たり前の挙動ではあるが、そうでない場合にはさっぱり意味がわからないかもしれない。
やっぱり Objective-C を使う人は C も必修にした方がいいんじゃないか。</p>

</div>


</div>

<div class="comment">

	<div class="caption">[<a href="./index.rb?date=20110526#c">ツッコミを入れる</a>]</div>
</div>








</div>


	<hr class="sep">
	
<div class="day">
<h2><span class="date">
<a href="./index.rb?date=20110514">2011-05-14</a>
</span> 
<span class="title"></span> <span class="nyear">[<a href="./index.rb?date=0514" title="長年日記">長年日記</a>]</span></h2>

<div class="body">

<div class="section">

<h3><a href="./index.rb?date=20110514#p01"><span class="sanchor">%</span></a> [<a href="./index.rb?year=2012;category=game">game</a>] Condemned 2 City Museum 捜査攻略</h3>
<p>ここだけゴールドが取れてなかったが、ようやく何とかなったのでメモ。</p>
<ul>
<li>3 Did you find any fingerprints on the paper?</li>
<li>1 Do you think Vanhorn nursed his nephew back to health?</li>
<li>2 What about the saw? You said it looked medieval?</li>
</ul>
<ul>
<li>Camera ID 1501</li>
</ul>
<ul>
<li>Medieval Tools 13A (カメラの映像を確認した後に展示室の階段付近に案内看板があるのでそれを調べる)</li>
</ul>
<ul>
<li>1 Any evidence the metal pieces came from Rachael Mars's body?</li>
</ul>
<p>頭の数字は選択肢の位置。
13A の看板の存在に気付かなかったせいで今まで Perfect が取れてなかった。
位置的に見逃しやすいし、無視しても話が進むのが結構罠。</p>
<p>ちなみに警備員を殺さないようにするミッションは、自分が殺さなければいいだけなので邪魔な場合は泥棒たちに始末してもらうと良い。</p>

</div>


</div>

<div class="comment">

	<div class="caption">[<a href="./index.rb?date=20110514#c">ツッコミを入れる</a>]</div>
</div>








</div>


	<hr class="sep">

<div class="adminmenu">
<span class="adminmenu"><a href="http://jijixi.azito.com/jijixi/">トップ</a></span>
<span class="adminmenu"><a href="./index.rb?date=20101115-3">&laquo;前3日分</a></span>
<span class="adminmenu"><a href="update.rb" rel="nofollow">追記</a></span>
</div>
<div style="text-align: right;">
<p>日記ってのは本来、自分で読み返すためにあるもんだよなあ……<br>
もしくは有名人になったら死後に本になったりとかか？</p>
<p><a href='http://jijixi.azito.com/diary/index.rdf'>RSS はこちら</a></p>
<!-- 0.0.0.0 -->
<p>jijixi at azito.com</p>
</div>




<div class="footer">
Generated by <a href="http://www.tdiary.org/">tDiary</a> version 2.2.0<br>
Powered by <a href="http://www.ruby-lang.org/">Ruby</a> version 1.8.1
</div>
</body>
</html>
